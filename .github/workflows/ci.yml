# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Continuous Integration

on:
  workflow_dispatch:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  cpplint:
    name: cpplint
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cpplint
          path: ~/.cache/pip

      - name: Pyhton
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: cpplint
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade cpplint
          cpplint \
            --repository=. \
            --recursive \
            --filter=-whitespace/line_length,-whitespace/braces,-whitespace/comments,-runtime/indentation_namespace,-whitespace/indent,-readability/braces,-whitespace/newline,-readability/todo,-build/c++11 \
            src

  pio_envs:
    name: Get PlatformIO Envs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          key: pip
          path: ~/.cache/pip
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Get Envs
        id: envs
        run: |
          echo "pio_default_envs=$(pio project config --json-output | jq -cr '[ .[][0] | select(startswith("env:")) | .[4:] ]')" >> $GITHUB_OUTPUT
    outputs:
      pio_default_envs: ${{ steps.envs.outputs.pio_default_envs }}

  platformio:
    name: "${{ matrix.example }} (${{ matrix.environment }})"
    needs: [pio_envs]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        environment: ${{ fromJSON(needs.pio_envs.outputs.pio_default_envs) }}
        example:
          [
            "FullyFeatured",
            "Simple",
            "Simple_WS",
            "SSL_CA_Bundle",
            "SSL_CA_Bundle_WiFiClientSecure",
            "SSL_CA_Cert",
          ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: |
            ~/.platformio
            ~/.cache/pip
          key: pio-${{ matrix.example }}-${{ matrix.environment }}
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - run: python -m pip install --upgrade pip
      - run: pip install --upgrade platformio
      - run: pip install --upgrade cryptography
      - run: PLATFORMIO_SRC_DIR=examples/${{ matrix.example }} pio run -e ${{ matrix.environment }}
